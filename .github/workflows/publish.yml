name: Publish App

permissions: write-all

on:
  push:

jobs:
  create_release:
    name: Create a release

    runs-on: ubuntu-latest

    outputs:
      r_id: ${{ steps.r_id.outputs.r_id }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Nodejs
        uses: actions/setup-node@v4

      - name: Install PNPM
        run: npm i -g pnpm

      - name: Install Utils Deps
        run: pnpm install
        working-directory: utils

      - name: Create Release
        id: r_id
        run: node release >> "$GITHUB_OUTPUT"
        working-directory: utils
        env:
          REPO: ${{ github.repository }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build:
    needs: [create_release]

    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]

    name: "Build app on ${{ matrix.os }}"
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Nodejs
        uses: actions/setup-node@v4

      - name: Install PNPM
        run: npm i -g pnpm

      - name: Install Deps
        run: pnpm install

      - name: Install dependencies (ubuntu only)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libayatana-appindicator3-dev librsvg2-dev

      - name: Rust setup
        uses: dtolnay/rust-toolchain@stable

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: "./src-tauri -> target"

      - name: Build & Publish
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          releaseId: ${{ needs.create_release.outputs.r_id }}

  push_to_ahqstore:
    needs: [create_release, build]
    name: Generate AHQ Store Binary
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup NodeJS
        uses: actions/setup-node@v4

      - name: Install pnpm
        run: npm i -g pnpm

      - name: Build
        uses: ahqstore/upload-app@v0.1.0
        with:
          release: ${{ needs.create_release.outputs.r_id }}
          upload: true
        env:
          GH_TOKEN: ${{ secrets.PAT_G_H }}

      - name: Install Utils Deps
        run: pnpm install
        working-directory: utils

      - name: Create Release
        id: r_id
        run: node undraft
        working-directory: utils
        env:
          R_ID: ${{ needs.create_release.outputs.r_id }}
          REPO: ${{ github.repository }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
